doctype html
html
  head
    title Snack List
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js") // axios를 사용하기 위해 CDN 추가

  body
    if snacks.length > 0
      .container
        each snack in snacks
          if snack.name
            .card.my-3.col-12
              .card-body
                .row
                  .col-4
                    - const base64Image = snack.image
                    img.card-img(src=base64Image, alt=snack.name)

                  .col-6
                    .snack-title
                      h5= snack.name

                    .nutrition-info
                      if snack["nutritionalIngredients"] 
                        - const ingredients = snack["nutritionalIngredients"];
                        if ingredients["칼로리"]
                          p.cal 칼로리: #{ingredients["칼로리"]}
                        if ingredients["탄"] || ingredients["단"] || ingredients["지"]
                          p.nutri 영양 성분:
                          |  탄수화물: #{ingredients["탄"] || '정보 없음'}, 단백질: #{ingredients["단"] || '정보 없음'}, 지방: #{ingredients["지"] || '정보 없음'}
                      else
                        p.alert.alert-info 영양 성분 정보가 없습니다.

                  .col-2.d-flex.justify-content-center.align-items-center
                    .favorite-icon-container
                      button.favorite-icon(onclick=`likeSnack('${snack.name}')`) ♥
                      p.favorite-count #{snack.required || 0}
    else
      p.alert.alert-info(role='alert')
        | 현재 데이터가 없습니다.

    // JavaScript 함수를 인라인으로 추가
    script.
      async function likeSnack(snackName) {
        try {
          const response = await fetch("/likesnack", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ snackName }),
          });

          if (response.ok) {
            location.reload(); // 페이지 새로고침하여 업데이트 반영
          } else {
            console.error("Failed to like snack");
            const errorData = await response.json();
            alert(`Failed to like snack: ${errorData.message}`);
          }
        } catch (error) {
          console.error("Error liking snack:", error);
          alert("An error occurred while liking the snack.");
        }
      }
